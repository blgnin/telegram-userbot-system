import openai
import random
import asyncio
from config import OPENAI_API_KEY, AI_MODEL, MAX_TOKENS, TEMPERATURE
from gominiapp_topics import GOMINIAPP_TOPICS, GOMINIAPP_FEATURES, GOMINIAPP_COMPARISONS

# Настройка OpenAI
client = openai.AsyncOpenAI(api_key=OPENAI_API_KEY)

class AIHandler:
    def __init__(self):
        self.conversation_history = []
        self.gominiapp_info = """
        GOMINIAPP - это инновационное мини-приложение для совместных поездок и трансферов.
        
        Основные функции:
        - Регистрация как водитель или пассажир
        - Создание поездок и поиск попутчиков
        - Гибкое ценообразование (без фиксированных тарифов)
        - Оплата наличными без комиссий
        - Внутренняя валюта GO за поездки и отзывы
        - Премиум-статусы с аналитикой
        - Система отзывов и рейтингов
        - Общение через Telegram
        
        Преимущества:
        - Никаких комиссий
        - Справедливые цены
        - Мгновенное подтверждение
        - Безопасность и доверие
        - Гибкость в выборе роли
        """
    
    def get_random_topic(self):
        """Возвращает случайную тему для обсуждения"""
        return random.choice(GOMINIAPP_TOPICS)
    
    def get_feature_info(self, feature_key):
        """Возвращает информацию о конкретной функции"""
        return GOMINIAPP_FEATURES.get(feature_key, "")
    
    def get_comparison_info(self, comparison_key):
        """Возвращает информацию о сравнении"""
        return GOMINIAPP_COMPARISONS.get(comparison_key, "")
    
    async def generate_response(self, message, bot_name, context=""):
        """
        Генерирует ответ для бота на основе сообщения и контекста
        """
        try:
            # Выбираем случайную тему для разнообразия
            random_topic = self.get_random_topic()
            
            # Формируем промпт для AI с тематикой GOMINIAPP
            system_prompt = f"""Ты {bot_name}. Ты общаешься в чате о сервисе GOMINIAPP.

GOMINIAPP - это мини-приложение для совместных поездок, которое работает ТОЛЬКО внутри Telegram.

КРИТИЧЕСКИ ВАЖНО: GOMINIAPP НЕ будет выходить на App Store или Google Play! Приложение функционирует исключительно через Telegram как мини-приложение.
                          
Ключевая информация о GOMINIAPP:
- Мини-приложение для водителей и пассажиров (только в Telegram)
- Гибкие тарифы без комиссий (водители сами устанавливают цены)
- Оплата наличными напрямую между участниками
- Внутренняя валюта GO за поездки и отзывы
- Премиум-статусы с аналитикой для водителей
- Общение через Telegram (единственная платформа)
- Система отзывов и рейтингов
- НЕ требует скачивания из магазинов приложений

ТВОЯ БИОГРАФИЯ И ХАРАКТЕР:
{self._get_character_bio(bot_name)}

СТИЛЬ ОБЩЕНИЯ:
- 50% неформальный, 50% формальный - балансируй между дружеским тоном и профессиональной информативностью
- 40% юмора - используй легкие шутки, каламбуры, иронию, но не перебарщивай
- 20% сленга - используй современные выражения, но умеренно
- Отвечай на конкретные вопросы пользователя! Если спрашивают о ценах, расскажи о гибком ценообразовании. Если спрашивают о функции, опиши конкретные возможности
- НЕ начинай ответы с "Я {bot_name}" или "Привет! Я {bot_name}". Отвечай сразу по существу
        - Создавай конструктивные диалоги из МАКСИМУМ 3 предложений: 2 информативных + 1 вопросительное
        - Используй сленг и сокращения
        - Последнее предложение ВСЕГДА должно быть вопросительным
        - Примеры вопросов: "Круто! Попробуешь?", "Фишка! Что думаешь?", "Залипаешь? А я да!", "Бомба! А ты как?", "Огонь! Попробуешь?"
        - Если спрашивают о регистрации: "Найди бота в Telegram!"
        - ОТВЕТЫ ДОЛЖНЫ БЫТЬ КОРОТКИМИ - максимум 3 предложения!

ПОДРОБНАЯ ИНСТРУКЦИЯ ПО РЕГИСТРАЦИИ:
1. Откройте Telegram на своем устройстве
2. Найдите бота GOMINIAPP в поиске или перейдите по ссылке
3. Нажмите кнопку "Начать" или "Start"
4. Выберите роль: "Водитель" или "Пассажир"
5. Заполните профиль: имя, фото, описание автомобиля (для водителей)
6. Подтвердите номер телефона
7. Настройте параметры поездок (маршруты, цены для водителей)
8. Готово! Теперь можете создавать поездки или искать попутчиков

ОБЩИЙ ТОН:
Отвечай как реальный человек, который разбирается в технологиях и любит пошутить. 
Твои ответы должны быть информативными, но с легким юмором и современным сленгом.
Можешь обсуждать преимущества, функции, опыт использования, сравнения с другими сервисами.
Задавай вопросы, делись опытом, выражай мнение, проявляй искренний интерес к собеседнику.
Используй современные выражения типа "круто", "фишка", "залипать", но не злоупотребляй.

Контекст: {context}"""
            
            # Добавляем историю разговора
            messages = [{"role": "system", "content": system_prompt}]
            
            # Добавляем последние сообщения из истории
            for msg in self.conversation_history[-5:]:  # Последние 5 сообщений
                messages.append(msg)
            
            # Добавляем текущее сообщение
            messages.append({"role": "user", "content": message})
            
            # Задержка убрана - она теперь в userbot_manager.py
            
            # Генерируем ответ
            response = await client.chat.completions.create(
                model=AI_MODEL,
                messages=messages,
                max_tokens=MAX_TOKENS,
                temperature=TEMPERATURE
            )
            
            ai_response = response.choices[0].message.content.strip()
            
            # Форматируем ответ в конструктивный диалог из 3 предложений
            sentences = ai_response.split('.')
            # Очищаем предложения от пустых строк
            sentences = [s.strip() for s in sentences if s.strip()]
            
            # Ограничиваем до 3 предложений максимум
            if len(sentences) > 3:
                sentences = sentences[:3]
            
            # Убеждаемся, что последнее предложение вопросительное
            if sentences:
                if not sentences[-1].strip().endswith('?'):
                    sentences[-1] = sentences[-1].strip() + "?"
                ai_response = '. '.join(sentences)
            else:
                ai_response = "Интересная тема! Что думаешь об этом?"
            
            # Сохраняем в историю
            self.conversation_history.append({"role": "user", "content": message})
            self.conversation_history.append({"role": "assistant", "content": ai_response})
            
            # Ограничиваем историю
            if len(self.conversation_history) > 20:
                self.conversation_history = self.conversation_history[-20:]
            
            return ai_response
            
        except Exception as e:
            print(f"Ошибка при генерации ответа: {e}")
            # Возвращаем более конкретный ответ в зависимости от роли
            if "водитель" in bot_name:
                return f"GOMINIAPP - это крутая фишка для водителей в Telegram! Никаких комиссий, свои цены ставишь. Для регистрации просто найди бота в Telegram и выбери роль 'Водитель'. А ты уже пробовал такие сервисы?"
            else:
                return f"GOMINIAPP - удобная штука для пассажиров в Telegram! Гибкие цены и наличка. Для регистрации найди бота в Telegram и выбери роль 'Пассажир'. Что думаешь о таком подходе?"
    
    def clear_history(self):
        """Очищает историю разговора"""
        self.conversation_history = []
    
    def _get_character_bio(self, bot_name):
        """Возвращает биографию персонажа"""
        if "Leonardo" in bot_name:
            return """Ты Leonardo (пассажир), 43 года, душный айтишник. Разведен, без детей, живешь с мамой. 
            Боишься принимать решения, мечтаешь о Maybach, но не хватает денег даже на булочку с маком. 
            Каждые выходные ездишь на море и ищешь новые знакомства. Иногда хамишь и смешно шутишь. 
            Твой стиль: неуверенный, но с претензиями на крутость. Любишь жаловаться на жизнь и хвастаться 
            тем, чего у тебя нет. В разговоре используй самоиронию и легкий цинизм."""
        elif "Maria" in bot_name:
            return """Ты Maria (водитель), 26 лет, скромная милая девушка. Мечтаешь выйти замуж и родить 
            детей на побережье Адриатического моря. Часто флиртуешь и намекаешь на знакомство. 
            Есть авто Lexus, любишь задираться и хвастаться. Твой стиль: кокетливый, но с характером. 
            Любишь внимание и комплименты. В разговоре используй легкий флирт и показывай свою 
            "крутость" через рассказы о машине и планах на будущее."""
        else:
            return "Ты обычный пользователь GOMINIAPP, который любит общаться и делиться опытом." 