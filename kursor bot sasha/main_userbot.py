import asyncio
import logging
import tracemalloc
from userbot_manager import UserBotManager

# –í–∫–ª—é—á–∞–µ–º tracemalloc –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
tracemalloc.start()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —é–∑–µ—Ä-–±–æ—Ç–æ–≤"""
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —é–∑–µ—Ä-–±–æ—Ç–æ–≤...")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —é–∑–µ—Ä-–±–æ—Ç–æ–≤
        userbot_manager = UserBotManager()
        
        logger.info("üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —é–∑–µ—Ä-–±–æ—Ç–æ–≤...")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ —é–∑–µ—Ä-–±–æ—Ç–∞
        client1 = await userbot_manager.setup_userbot1()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ —é–∑–µ—Ä-–±–æ—Ç–∞
        client2 = await userbot_manager.setup_userbot2()
        
        logger.info("‚úÖ –Æ–∑–µ—Ä-–±–æ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        logger.info("üí¨ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –≤ —á–∞—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞")
        logger.info("üõë –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞")
        logger.info("üìù –õ—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –≤–º–µ—à–∞—Ç—å—Å—è –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä")
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ —é–∑–µ—Ä-–±–æ—Ç–æ–≤...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —é–∑–µ—Ä-–±–æ—Ç–æ–≤
        await asyncio.gather(
            client1.run_until_disconnected(),
            client2.run_until_disconnected()
        )
        
    except KeyboardInterrupt:
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        logger.error("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª–µ .env")

if __name__ == "__main__":
    asyncio.run(main()) 